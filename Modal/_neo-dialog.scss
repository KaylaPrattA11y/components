/* stylelint-disable scss/at-rule-no-unknown */
/* stylelint-disable property-no-unknown */
.neo-dialog {
  --padding: var(--gap-sm);
  padding: 0;
  border: 0;
  box-shadow: var(--shadow-lg);
  inline-size: 100%;
  max-inline-size: var(--max-width);
  max-block-size: 100%;
  overflow-x: hidden;
  &:not(.has-backdrop)::backdrop {
    opacity: 0;
  }
  &:is(.has-animation-fade, .has-animation-slide) {
    transition-duration: var(--animation-speed);
    transition-behavior: allow-discrete;
    &::backdrop {
      transition: backdrop-filter var(--animation-speed), background var(--animation-speed);
    }
  }
  &.has-animation-fade {
    opacity: 0;
    transition-property: display, overlay, opacity;
    &[open] {
      opacity: 1;
      @starting-style {
        opacity: 0;
      }
    }
  }
  &.has-animation-slide.is-modal {
    translate: 0 50%;
    opacity: 0;
    transition-property: translate, display, overlay, opacity;
    &[open] {
      translate: 0;
      opacity: 1;
      @starting-style {
        translate: 0 -50%;
        opacity: 0;
      }
    }
  }
  &.has-animation-slide:is(.is-offcanvas-left, .is-offcanvas-right) {
    transition-property: translate, display, overlay;
    translate: var(--translate);
    &[open] {
      translate: 0;
      @starting-style {
        translate: var(--translate);
      }
    }
  }
  &.has-animation-slide.is-drawer {
    translate: 0 100%;
    opacity: 0;
    transition-property: translate, display, overlay, opacity;
    &[open] {
      translate: 0;
      opacity: 1;
      @starting-style {
        translate: 0 100%;
        opacity: 0;
      }
    }
  }
  &-content {
    padding: var(--padding);
    min-block-size: 100%;
  }
  &.is-modal {
    --max-width: #{rem(500px)};
    border-radius: 0.5rem;
  }
  &:is(.is-offcanvas-left, .is-offcanvas-right) {
    --max-width: #{rem(390px)};
    height: 100dvh;
    margin: 0;
  }
  &.is-offcanvas-left {
    --translate: -100%;
  }
  &.is-offcanvas-right {
    --translate: 100%;
    inset: 0 0 auto auto;
  }
  &.is-drawer {
    --translate: 0 -100%;
    inset: auto auto 0 0;
    border-top-left-radius: var(--border-radius-md);
    border-top-right-radius: var(--border-radius-md);
  }
  &.is-drawer::after {
    position: absolute;
    inset: var(--gap-xs) auto auto 50%;
    translate: -50% 0;
    content: "";
    background: var(--gray500);
    block-size: rem(4px);
    inline-size: rem(32px);
    border-radius: var(--ui-pill-radius);
  }
  &[open]::backdrop {
    backdrop-filter: blur(2px);
    background: rgba(0, 0, 0, 0.35);
    @starting-style {
      backdrop-filter: blur(0);
      background: rgba(0, 0, 0, 0);
    }
  }
  &-close {
    position: absolute;
    inset: calc(var(--padding) * 0.5) calc(var(--padding) * 0.5) auto auto;
  }
  &-close-wrapper.is-sticky {
    position: sticky;
    inset: 0 0 auto auto;
    z-index: 1;
  }
  // Tabbed Modal
  &.is-tabbed {
    overflow: visible;
    .neo-dialog-content {
      position: relative;
      block-size: 100dvh;
      background: var(--white);
      overflow-y: auto;
    }
  }
  &.is-tabbed.has-animation-slide:is(.is-offcanvas-left, .is-offcanvas-right) {
    .neo-dialog-tablist {
      transition-property: translate, display, overlay;
      translate: var(--translate);
    }
    &[open] {
      .neo-dialog-tablist {
        translate: 0;
        @starting-style {
          translate: var(--translate);
        }
      }
    }
  }
  .neo-dialog-tablist {
    --min-tab-width: #{rem(65px)};
    --min-tab-height: #{rem(70px)};
    --tab-height: auto;
    --tab-icon-size: var(--icon-size-sm);
    display: flex;
    background: var(--lightBlueGray);
    overflow-x: auto;
    transition-duration: calc(var(--animation-speed) * 1.5);
  }
  .neo-dialog-tablist button {
    @include type-scale("body-2");
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-inline-size: var(--min-tab-width);
    min-block-size: var(--min-tab-height);
    inline-size: var(--tab-width);
    block-size: var(--tab-height);
    margin: 0;
    padding: var(--gap-xs);
    border: 0;
  }
  .neo-dialog-tablist button::before {
    font-size: var(--tab-icon-size);
  }
  .neo-dialog-tablist button:not(:last-child)::after {
    content: "";
    position: absolute;
    background: var(--gray500);
  }
  .neo-dialog-tablist button:not(:last-child)::after {
    inset: 50% 0 auto auto;
    translate: 0 -50%;
    width: 1px;
    height: 75%;
  }
  .neo-dialog-tablist button[aria-selected="false"] {
    color: var(--text-muted-color);
  } 
  .neo-dialog-tablist button[aria-selected="true"] {
    background: var(--white);
    cursor: default;
    &::before {
      color: var(--ui-active-color);
    }
  }
  .neo-dialog-tablist button:disabled {
    color: var(--text-disabled-color);
    opacity: 0.75;
    cursor: not-allowed;
  } 
  // sm and up
  @include deviceMin(mobileMax) {
    .neo-dialog-tablist {
      --tablist-border-radius: var(--border-radius-md);
      position: absolute;
      overflow: hidden;
    }
    .neo-dialog-tablist[aria-orientation="horizontal"] {
      --tab-width: #{rem(92px)};
      --tab-height: #{rem(50px)};
    }
    .neo-dialog-tablist[aria-orientation="vertical"] {
      --tab-width: #{rem(92px)};
      --tab-height: #{rem(114px)};
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
    .neo-dialog-tablist[aria-orientation="vertical"] button:not(:last-child)::after {
      inset: auto auto 0 50%;
      translate: -50% 0;
      width: 75%;
      height: 1px;
    }
    &.is-tabbed.is-offcanvas-right .neo-dialog-tablist {
      inset: var(--gap-sm) auto auto calc(var(--tab-width) * -1);
    }
    &.is-tabbed.is-offcanvas-left .neo-dialog-tablist {
      inset: var(--gap-sm) calc(var(--tab-width) * -1) auto auto;
    }
    &.is-tabbed.is-offcanvas-right .neo-dialog-tablist {
      border-top-left-radius: var(--tablist-border-radius);
      border-bottom-left-radius: var(--tablist-border-radius);
    }
    &.is-tabbed.is-offcanvas-left .neo-dialog-tablist {
      border-top-right-radius: var(--tablist-border-radius);
      border-bottom-right-radius: var(--tablist-border-radius);
    }
    &.is-tabbed .neo-dialog-tablist[aria-orientation="horizontal"] {
      border-top-left-radius: var(--tablist-border-radius);
      border-top-right-radius: var(--tablist-border-radius);
      inset: calc(var(--tab-width) * -1) auto auto;
    }
  }
}
