.inline-alerts {
  --transition-duration: 250ms;
  position: relative;
  display: grid;
  padding: 0;
  grid-template-rows: 0fr;
  transition-behavior: allow-discrete;
  transition: 
    grid-template-rows var(--transition-duration),
    padding-block var(--transition-duration),
    position var(--transition-duration);
  &.is-deployed {
    grid-template-rows: 1fr;
  }
  &:not(.is-deployed) .inline-alerts--content {
    padding: 0;
    opacity: 0;
  }
  @each $status, $status-props in $statuses {
    &.is-#{$status} {
      &:not(.is-anchored) {
        --text-color: #{status($status, "color")};
        --background-color: transparent;
      }
      &.is-anchored {
        --text-color: var(--white);
        --background-color: #{status($status, "color")};
      }
      .inline-alerts--icon::before {
        align-self: start;
        @include status-icon($status, "sm");
      }
    }
  }
  &--content {
    overflow: hidden;
    transition: 
      padding var(--transition-duration), 
      opacity var(--transition-duration);
  }
  &.has-icon .inline-alerts--content {
    display: grid;
    grid-template-columns: auto auto;
    justify-content: start;
    gap: var(--gap-xxs);
  }
  // Just plain text inserted with no HTML elements
  &--message:not(:has(> *)) {
    @include type-scale("body-2");
  }
  &--message {
    color: var(--text-color);
    a:not([class]) {
      @include button-variant("link");
    }
    > p:only-child {
      margin: 0;
    }
    > p:not(:only-child):first-child {
      margin-block-start: 0;
    }
    > p:not(:only-child):last-child {
      margin-block-end: 0;
    }
  }
  &:not(.is-anchored) .inline-alerts--content :where(p,ul,ol,a):not([class]) {
    @include type-scale("body-2");
  }
  &.is-anchored .inline-alerts--content :where(p,ul,ol,a):not([class]) {
    @include type-scale("subtitle-1");
  }
  &.is-anchored {
    --arrow-height: 16px; // Visual length of the arrow from base to tip
    --arrow-width: 24px; // Visual width of the arrow
    --arrow-border-width: 0 calc(var(--arrow-width) * 0.5) var(--arrow-height) calc(var(--arrow-width) * 0.5); // Appears 24px wide and 16px tall
    position: absolute;
    padding: 0 var(--gap-sm);
    background: var(--background-color);
    z-index: 2;
  }
  &.is-anchored ::marker,
  &.is-anchored ::before,
  &.is-anchored :where(::marker, a, button, p, ul, ol) {
    color: var(--text-color) !important;
  }
  &.is-anchored.is-deployed {
    padding: var(--gap-sm); // Padding is applied when the alert is deployed so that it animates smoothly
  }
  &.is-anchored.is-anchored-top {
   inset: 0 auto auto 0;
   translate: 0 calc(-100% - var(--arrow-height));
  }
  &.is-anchored.is-anchored-right {
    inset: 50% 0 auto auto;
    translate: calc(100% + var(--arrow-height)) -50%;
  }
  &.is-anchored.is-anchored-bottom {
    inset: auto auto 0 0;
    translate: 0 calc(100% + var(--arrow-height));
  }
  &.is-anchored.is-anchored-left {
    inset: 0 auto 0 0;
    translate: calc(-100% - var(--arrow-height)) 0;
  }
  &.is-anchored::after {
    position: absolute;
    content: "";
    inline-size: 0; 
    block-size: 0;
    border-width: 0;
    border-style: solid;
    transition: border-width var(--transition-duration);
    z-index: 1;
  }
  &.is-anchored.is-anchored-top::after {
    inset: auto auto 0 50%;
    translate: -50% 100%;
    border-color: var(--background-color) transparent transparent transparent;
  }
  &.is-anchored.is-anchored-top.is-deployed::after {
    border-width: var(--arrow-height) calc(var(--arrow-width) * 0.5) 0 calc(var(--arrow-width) * 0.5);
  }
  &.is-anchored.is-anchored-bottom::after {
    inset: 0 0 auto 50%;
    translate: -50% -100%;
    border-color: transparent transparent var(--background-color) transparent;
  }
  &.is-anchored.is-anchored-bottom.is-deployed::after {
    border-width: 0 calc(var(--arrow-width) * 0.5) var(--arrow-height) calc(var(--arrow-width) * 0.5);
  }
}
